// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using test.Data;

#nullable disable

namespace test.Migrations.Depi
{
    [DbContext(typeof(DepiContext))]
    [Migration("20250919142543_last3")]
    partial class last3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("test.Models.Animal", b =>
                {
                    b.Property<int>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("animalID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnimalId"));

                    b.Property<byte?>("Age")
                        .HasColumnType("tinyint")
                        .HasColumnName("age");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Photo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("photo");

                    b.Property<string>("Type")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("type");

                    b.Property<int?>("Userid")
                        .HasColumnType("int");

                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.HasKey("AnimalId")
                        .HasName("PK__Animals__6874563112ABE582");

                    b.HasIndex("id");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("test.Models.MedicalRecord", b =>
                {
                    b.Property<int>("Recordid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("recordid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Recordid"));

                    b.Property<int?>("Animalid")
                        .HasColumnType("int")
                        .HasColumnName("animalid");

                    b.Property<string>("Injurys")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("injurys");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status");

                    b.HasKey("Recordid")
                        .HasName("PK__medical___D82414B603C3C68E");

                    b.HasIndex("Animalid");

                    b.ToTable("medical_record");
                });

            modelBuilder.Entity("test.Models.Product", b =>
                {
                    b.Property<int>("Productid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("productid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Productid"));

                    b.Property<string>("Disc")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("disc");

                    b.Property<string>("Photo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("photo");

                    b.Property<int?>("Price")
                        .HasColumnType("int")
                        .HasColumnName("price");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type");

                    b.Property<int?>("Userid")
                        .HasColumnType("int");

                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.HasKey("Productid")
                        .HasName("PK__Products__2D172D323F6C272B");

                    b.HasIndex("id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("test.Models.Request", b =>
                {
                    b.Property<int>("Reqid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("reqid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Reqid"));

                    b.Property<int?>("AnimalId")
                        .HasColumnType("int")
                        .HasColumnName("AnimalID");

                    b.Property<string>("ReqTo")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Req_to");

                    b.Property<string>("Userid")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("userid");

                    b.HasKey("Reqid")
                        .HasName("PK__Requests__20C3720149F8AC2F");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("test.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<string>("Phonenumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phonenumber");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("role");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("test.Models.VaccinationNeeded", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Medicalid")
                        .HasColumnType("int")
                        .HasColumnName("medicalid");

                    b.Property<string>("VaccineName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vaccine_name");

                    b.HasKey("Id")
                        .HasName("PK__vaccinat__3213E83F846723D8");

                    b.HasIndex("Medicalid");

                    b.ToTable("vaccination_needed");
                });

            modelBuilder.Entity("test.Models.Animal", b =>
                {
                    b.HasOne("test.Models.User", "User")
                        .WithMany("Animals")
                        .HasForeignKey("id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("test.Models.MedicalRecord", b =>
                {
                    b.HasOne("test.Models.Animal", "Animal")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("Animalid")
                        .HasConstraintName("anim_rec_fk");

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("test.Models.Product", b =>
                {
                    b.HasOne("test.Models.User", "User")
                        .WithMany("products")
                        .HasForeignKey("id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("test.Models.VaccinationNeeded", b =>
                {
                    b.HasOne("test.Models.MedicalRecord", "Medical")
                        .WithMany("VaccinationNeededs")
                        .HasForeignKey("Medicalid")
                        .HasConstraintName("vac_rec_fk");

                    b.Navigation("Medical");
                });

            modelBuilder.Entity("test.Models.Animal", b =>
                {
                    b.Navigation("MedicalRecords");
                });

            modelBuilder.Entity("test.Models.MedicalRecord", b =>
                {
                    b.Navigation("VaccinationNeededs");
                });

            modelBuilder.Entity("test.Models.User", b =>
                {
                    b.Navigation("Animals");

                    b.Navigation("products");
                });
#pragma warning restore 612, 618
        }
    }
}
